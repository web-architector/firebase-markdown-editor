{"version":3,"sources":["services/firebase.js","components/App/App.jsx","components/Dashboard/Dashboard.jsx","components/Editor/Editor.jsx","components/SignIn/SignIn.jsx","components/Preloader/Preloader.jsx","index.jsx"],"names":["firebaseApp","firebase","length","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseAppAuth","auth","db","firestore","store","storage","providers","googleProvider","GoogleAuthProvider","githubProvider","GithubAuthProvider","newApp","withFirebaseAuth","createComponentWithAuth","props","signInWithGoogle","signInWithGithub","signOut","user","loading","className","href","onClick","console","log","alt","src","photoURL","path","signIns","getUserFiles","userId","a","collection","doc","get","exists","id","snapshot","userFiles","forEach","file","data","name","content","push","set","createFile","fileName","add","res","deleteFile","fileId","delete","Dashboard","useState","nameValue","setNameValue","useSWR","error","useEffect","navigate","onSubmit","e","preventDefault","then","r","mutate","type","placeholder","value","onChange","target","map","key","to","getFile","Editor","setValue","undefined","onUnload","event","toast","warning","returnValue","window","addEventListener","removeEventListener","uploadImage","uploadedFile","size","ref","child","put","uploadTask","getDownloadURL","disabled","update","success","defaultValue","getValue","onShowToast","message","SignIn","uid","Preloader","style","position","display","top","alignItems","justifyContent","width","height","background","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95dae411.chunk.js","sourcesContent":["import 'firebase/auth';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\n// Check if we have already initialized an app\nconst firebaseApp = !firebase.apps.length\n    ? firebase.initializeApp(firebaseConfig)\n    : firebase.app();\n\nexport const firebaseAppAuth = firebaseApp.auth();\nexport const db = firebaseApp.firestore();\nexport const store = firebaseApp.storage();\n\nexport const providers = {\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\n    githubProvider: new firebase.auth.GithubAuthProvider() // <- This one is optional\n};\n","import React from 'react';\nimport { Router } from '@reach/router';\n\nimport withFirebaseAuth from 'react-with-firebase-auth';\nimport {\n    Dashboard, SignIn, Editor, Preloader\n} from 'components';\nimport { firebaseAppAuth, providers } from 'services/firebase';\n\nimport './App.css';\n\nconst createComponentWithAuth = withFirebaseAuth({\n    providers,\n    firebaseAppAuth\n});\n\nconst App = (props) => {\n    const {\n        signInWithGoogle,\n        signInWithGithub,\n        signOut,\n        user,\n        loading\n    } = props;\n    return (\n        <>\n            { loading && <Preloader /> }\n            <header className=\"header\">\n                <h2>Smart Markdown</h2>\n                { user && (\n                    <div className=\"user-profile\">\n                        <a\n                            className=\"log-out-link\"\n                            href=\"#log-out\"\n                            onClick={() => {\n                                console.log('Signed out...');\n                                signOut();\n                            }}\n                        >\n                            Выйти\n                        </a>\n                        <img alt=\"Profile\" className=\"avatar\" src={user.photoURL} />\n                    </div>\n                ) }\n            </header>\n            <Router>\n                <SignIn\n                    path=\"/\"\n                    user={user}\n                    signIns={{ signInWithGithub, signInWithGoogle }}\n                />\n                <Dashboard path=\"user/:userId\" user={user} />\n                <Editor path=\"user/:userId/editor/:fileId\" user={user} />\n            </Router>\n        </>\n    );\n};\nconst newApp = createComponentWithAuth(App);\nexport default newApp;\n","import React, { useState, useEffect } from 'react';\nimport useSWR, { mutate } from 'swr';\n// import useSWR from 'swr';\nimport { Link, navigate } from '@reach/router';\nimport { db } from 'services/firebase';\nimport './Dashboard.css';\n\n// Получение файлов юзера из базы данных\nconst getUserFiles = async (userId) => {\n    const doc = await db.collection('users').doc(userId).get();\n\n    if (doc.exists) {\n        console.log('User found in database');\n        const snapshot = await db\n            .collection('users')\n            .doc(doc.id)\n            .collection('files')\n            .get();\n\n        const userFiles = [];\n        snapshot.forEach((file) => {\n            const { name, content } = file.data();\n            userFiles.push({ id: file.id, name, content });\n        });\n        return userFiles;\n    }\n    console.log('User not found in database, creating new entry...');\n    db.collection('users').doc(userId).set({});\n    return [];\n};\n\n// Новый файл-заметка в БД\nconst createFile = async (userId, fileName) => {\n    const res = await db.collection('users').doc(userId).collection('files').add({\n        name: fileName,\n        content: ''\n    });\n    return res;\n};\n\nconst deleteFile = async (userId, fileId) => {\n    const res = await db\n        .collection('users')\n        .doc(userId)\n        .collection('files')\n        .doc(fileId)\n        .delete();\n    return res;\n};\n\nexport const Dashboard = ({ user, userId }) => {\n    const [nameValue, setNameValue] = useState('');\n    const { data, error } = useSWR(userId, getUserFiles);\n    useEffect(() => {\n        if (!user) {\n            navigate('/');\n        }\n    }, [user]);\n\n    if (error) return <p>Ошибка при загрузке данных!</p>;\n    if (!data) return <p>Загрузка...</p>;\n\n    return (\n        <div>\n            <form\n                    onSubmit={(e) => {\n                        e.preventDefault();\n                        if (nameValue) {\n                            setNameValue('');\n                            createFile(userId, nameValue).then(r => {});\n                            mutate(userId).then(r => {});\n                        }\n                    }}\n                    className=\"new-file-form\"\n            >\n                <input\n                        type=\"text\"\n                        placeholder=\"Название файла...\"\n                        value={nameValue}\n                        onChange={(e) => setNameValue(e.target.value)}\n                />\n                <button type=\"submit\" className=\"add-button\">\n                    Создать\n                </button>\n            </form>\n            <ul className=\"files-list\">\n                {data.map((file) => (\n                    <li key={file.id} className=\"file\">\n                        <Link to={`/user/${userId}/editor/${file.id}`} className=\"link\">\n                            {file.name}\n                        </Link>\n                        <button\n                                    type=\"button\"\n                                    onClick={() => {\n                                        deleteFile(userId, file.id).then(() => mutate(userId));\n                                    }}\n                                    className=\"delete-button\"\n                        >\n                            x\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n","import React, { useState, useEffect } from 'react';\nimport useSWR, { mutate } from 'swr';\nimport { db, store } from 'services/firebase';\nimport { Link, navigate } from '@reach/router';\nimport MarkdownEditor from 'rich-markdown-editor';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport './Editor.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\n\nconst getFile = async (userId, fileId) => {\n    const doc = await db\n        .collection('users')\n        .doc(userId)\n        .collection('files')\n        .doc(fileId)\n        .get();\n\n    return doc.data();\n};\n\nexport const Editor = ({ user, userId, fileId }) => {\n    useEffect(() => {\n        if (!user) {\n            navigate('/');\n        }\n    }, [user]);\n\n    const { data: file, error } = useSWR([userId, fileId], getFile);\n    const [value, setValue] = useState(null);\n\n    useEffect(() => {\n        if (file !== undefined && value === null) {\n            console.log('Set initial content in state. length=', file.content.length);\n            setValue(file.content);\n        }\n    }, [file, value]);\n\n    const onUnload = (event) => {\n        toast.warning('You have unsaved changes!');\n        event.preventDefault();\n        event.returnValue = 'You have unsaved changes!';\n        return 'You have unsaved changes!';\n    };\n\n    useEffect(() => {\n        if (file && !(file.content === value)) {\n            window.addEventListener('beforeunload', onUnload);\n        } else {\n            window.removeEventListener('beforeunload', onUnload);\n        }\n        return () => window.removeEventListener('beforeunload', onUnload);\n    });\n\n    const saveChanges = () => {\n        db.collection('users').doc(userId).collection('files').doc(fileId)\n            .update({\n                content: value\n            });\n        mutate([userId, fileId]);\n        toast.success('Your changes have been saved!');\n    };\n\n    const uploadImage = async (uploadedFile) => {\n        if (uploadedFile.size <= 1000000) {\n            const doc = await db\n                .collection('users')\n                .doc(userId)\n                .collection('images')\n                .add({\n                    name: uploadedFile.name\n                });\n\n            const uploadTask = await store\n                .ref()\n                .child(`users/${userId}/${doc.id}-${uploadedFile.name}`)\n                .put(uploadedFile);\n\n            return uploadTask.ref.getDownloadURL();\n        }\n        toast.error(' Image too big!');\n    };\n\n    if (error) return <p>We had an issue while getting the data</p>;\n    if (!file) return <p>Loading...</p>;\n\n    return (\n        <div>\n            <header className=\"editor-header\">\n                <Link className=\"back-button\" to={`/user/${userId}`}>\n                    &lt;\n                </Link>\n                <h3>{file.name}</h3>\n                <button\n                        disabled={file.content === value}\n                        onClick={saveChanges}\n                        className=\"save-button\"\n                >\n                    Save Changes\n                </button>\n            </header>\n            <div className=\"editor\">\n                <MarkdownEditor\n                        defaultValue={file.content}\n                        onChange={(getValue) => {\n                            setValue(getValue());\n                        }}\n                        uploadImage={uploadImage}\n                        onShowToast={(message) => toast(message)}\n                />\n            </div>\n            <ToastContainer />\n        </div>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { navigate } from '@reach/router';\n\nexport const SignIn = ({\n    user,\n    signIns: { signInWithGoogle, signInWithGithub }\n\n}) => {\n    useEffect(() => {\n        if (user) {\n            navigate(`/user/${user.uid}`);\n        }\n    }, [user]);\n\n    return (\n        <div className=\"sign-in-page\">\n            <h3>Добро пожаловать редактор  Smart Markdown!</h3>\n            <p>\n                Для хранения Ваших документов и синхронизации между устройствами войдите, используя одну из учетных записей социальной сети\n            </p>\n            <div className=\"sign-in-buttons\">\n                <button type=\"button\" onClick={signInWithGoogle}>Вход через Google</button>\n                <button type=\"button\" onClick={signInWithGithub}>Вход через GitHub</button>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const Preloader = () => (\n    <div style={{\n        position: 'fixed',\n        display: 'flex',\n        top: 0,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n        height: '2.68em',\n        background: 'green',\n        color: 'white'\n    }}\n    >\n        Loading..\n    </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components';\n\nReactDOM.render(\n    <><App /></>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}